{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vamshika\\\\Downloads\\\\netflix\\\\netflix\\\\src\\\\Row.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"./Row.css\";\nimport axios from './axios';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nfunction Row(_ref) {\n  _s();\n  let {\n    title,\n    fetchURL,\n    isLargeRow\n  } = _ref;\n  const [movies, setMovies] = useState([]);\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchURL);\n      setMovies(request.data.results);\n      return request;\n    }\n    fetchData();\n  }, [fetchURL]);\n  // console.table(movies);\n  const opts = {\n    height: \"390\",\n    width: \"100%\",\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1\n    }\n  };\n  const handleClick = async movie => {\n    if (trailerUrl) {\n      setTrailerUrl(\"\");\n    } else {\n      var _trailerurl$data$resu;\n      let trailerurl = await axios.get(`/movie/${movie.id}/videos?api_key=20da8952e9d4991a43f41a6c3cf8777e`);\n      setTrailerUrl((_trailerurl$data$resu = trailerurl.data.results[0]) === null || _trailerurl$data$resu === void 0 ? void 0 : _trailerurl$data$resu.key);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => {\n          handleClick(movie);\n        },\n        className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n        src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), trailerUrl && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: trailerUrl,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Row, \"L1ywPNv5QsX47ZoMAyL8l4aBE/I=\");\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useState","axios","YouTube","base_url","Row","title","fetchURL","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","request","get","data","results","opts","height","width","playerVars","autoplay","handleClick","movie","trailerurl","id","key","map","poster_path","backdrop_path","name"],"sources":["C:/Users/Vamshika/Downloads/netflix/netflix/src/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport \"./Row.css\"\r\nimport axios from './axios';\r\nimport YouTube from 'react-youtube';\r\n\r\n\r\nconst base_url=\"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({title,fetchURL,isLargeRow}) {\r\n\r\n    const [movies,setMovies]=useState([]);\r\n    const [trailerUrl,setTrailerUrl]=useState(\"\");\r\n\r\n    useEffect(() => {\r\n      async function fetchData(){\r\n        const request= await axios.get(fetchURL);\r\n        setMovies(request.data.results);\r\n        return request;\r\n      }\r\n      fetchData();\r\n    },[fetchURL]);  \r\n    // console.table(movies);\r\n    const opts={\r\n      height: \"390\",\r\n      width: \"100%\",\r\n      playerVars:{\r\n        // https://developers.google.com/youtube/player_parameters\r\n        autoplay:1,\r\n      }\r\n    }\r\n    \r\n    const handleClick = async (movie) => {\r\n      if (trailerUrl) {\r\n        setTrailerUrl(\"\");\r\n      } else {\r\n        let trailerurl = await axios.get(\r\n          `/movie/${movie.id}/videos?api_key=20da8952e9d4991a43f41a6c3cf8777e`\r\n        );\r\n      \r\n        setTrailerUrl(trailerurl.data.results[0]?.key);\r\n\r\n      }\r\n    };\r\n\r\n  return (\r\n    <div className='row'>\r\n        <h2 >{title}</h2>\r\n        <div className='row_posters'>\r\n          {\r\n            movies.map(movie => <img key={movie.id} onClick={() =>{handleClick(movie)}} className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}  src={`${base_url}${isLargeRow? movie.poster_path : movie.backdrop_path}`} alt={movie.name} />)\r\n          }\r\n        </div>\r\n        {trailerUrl &&<YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Row;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,eAAe;AAAC;AAGpC,MAAMC,QAAQ,GAAC,sCAAsC;AAErD,SAASC,GAAG,OAA8B;EAAA;EAAA,IAA7B;IAACC,KAAK;IAACC,QAAQ;IAACC;EAAU,CAAC;EAEpC,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACU,UAAU,EAACC,aAAa,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACd,eAAea,SAAS,GAAE;MACxB,MAAMC,OAAO,GAAE,MAAMZ,KAAK,CAACa,GAAG,CAACR,QAAQ,CAAC;MACxCG,SAAS,CAACI,OAAO,CAACE,IAAI,CAACC,OAAO,CAAC;MAC/B,OAAOH,OAAO;IAChB;IACAD,SAAS,EAAE;EACb,CAAC,EAAC,CAACN,QAAQ,CAAC,CAAC;EACb;EACA,MAAMW,IAAI,GAAC;IACTC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAC;MACT;MACAC,QAAQ,EAAC;IACX;EACF,CAAC;EAED,MAAMC,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnC,IAAIb,UAAU,EAAE;MACdC,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,MAAM;MAAA;MACL,IAAIa,UAAU,GAAG,MAAMvB,KAAK,CAACa,GAAG,CAC7B,UAASS,KAAK,CAACE,EAAG,kDAAiD,CACrE;MAEDd,aAAa,0BAACa,UAAU,CAACT,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,0DAA1B,sBAA4BU,GAAG,CAAC;IAEhD;EACF,CAAC;EAEH,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAA,UAAMrB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAM,eACjB;MAAK,SAAS,EAAC,aAAa;MAAA,UAExBG,MAAM,CAACmB,GAAG,CAACJ,KAAK,iBAAI;QAAoB,OAAO,EAAE,MAAK;UAACD,WAAW,CAACC,KAAK,CAAC;QAAA,CAAE;QAAC,SAAS,EAAG,cAAahB,UAAU,IAAI,iBAAkB,EAAE;QAAE,GAAG,EAAG,GAAEJ,QAAS,GAAEI,UAAU,GAAEgB,KAAK,CAACK,WAAW,GAAGL,KAAK,CAACM,aAAc,EAAE;QAAC,GAAG,EAAEN,KAAK,CAACO;MAAK,GAArMP,KAAK,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QAAgM;IAAC;MAAA;MAAA;MAAA;IAAA,QAErO,EACLf,UAAU,iBAAG,QAAC,OAAO;MAAC,OAAO,EAAEA,UAAW;MAAC,IAAI,EAAEO;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACxD;AAEV;AAAC,GA/CQb,GAAG;AAAA,KAAHA,GAAG;AAiDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}